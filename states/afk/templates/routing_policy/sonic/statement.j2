{#
  NOT IMPLEMENTED:
    - origin-eq
    - afi-safi-in
    - next-hop-in

  MISSING IN OPENCONFIG:
    - large communities
    - match origin-as validity invalid

  TODO:
    - ext-community
#}

{# Device specific mapping #}

{% set PROTOCOLS = {
    "BGP": "bgp",
    "ISIS": "isis",
    "OSPF": "ospf",
    "STATIC": "static",
    "DIRECTLY_CONNECTED": "connected",
  }
%}

{% set L3_PROTOCOLS = {
    "IPV4": "ip",
    "IPV6": "ipv6",
}
%}

{% set ACTION = {
    "ACCEPT_ROUTE": "permit",
    "REJECT_ROUTE": "deny",
  }
%}

{# Configuration #}

route-map {{ route_map_name }} {{ ACTION[actions["config"]["policy-result"]] }} {{ sequence }}

{# Conditions #}

{% if conditions and conditions["match-prefix-set"] %}
  {% set prefix_set_mode = prefixes_set_mode[conditions["match-prefix-set"]["config"].get("prefix-set")] %}
  match {{ L3_PROTOCOLS[prefix_set_mode] }} address prefix-list {{ conditions["match-prefix-set"]["config"]["prefix-set"] }}

  {# Hardcoded patch for 201911 bug (fixed in next major release). TODO: remove once we have SONiC migrated to >= 202111 #}
  {% if route_map_name == "RM-CLOS-IN" and sequence == "10" and conditions["match-prefix-set"]["config"]["prefix-set"] == "PF-ANY_IPV6" %}
  set ipv6 next-hop prefer-global
  on-match next
  {% endif %}
{% endif %}

{% if deep_get(conditions, "config", "install-protocol-eq") %}
  match source-protocol {{ PROTOCOLS[conditions["config"]["install-protocol-eq"]] }}
{% endif %}

{% if deep_get(conditions, "bgp-conditions", "config", "med-eq") %}
  match metric {{ conditions["bgp-conditions"]["config"]["med-eq"] }}
{% endif %}

{% if deep_get(conditions, "bgp-conditions", "config", "local-pref-eq") %}
  set local-preference {{ conditions["bgp-conditions"]["config"]["local-pref-eq"] }}
{% endif %}

{% if deep_get(conditions, "bgp-conditions", "config", "community-set") %}
  match community {{ conditions["bgp-conditions"]["config"]["community-set"] }}
{% endif %}

{% if deep_get(conditions, "config", "call-policy") %}
  call {{ conditions["config"]["call-policy"] }}
{% endif %}

{# Actions #}

{% if deep_get(actions, "bgp-actions", "config", "set-route-origin") %}
  set origin {{ actions["bgp-actions"]["config"]["set-route-origin"]|lower }}
{% endif %}

{% if deep_get(actions, "bgp-actions", "config", "set-local-pref") %}
  set local-preference {{ actions["bgp-actions"]["config"]["set-local-pref"] }}
{% endif %}

{% if deep_get(actions, "bgp-actions", "config", "set-next-hop") %}
  {% if ":" in actions["bgp-actions"]["config"]["set-next-hop"] %}
  set ipv6 next-hop {{ actions["bgp-actions"]["config"]["set-next-hop"] }}
  {% else %}
  set ip next-hop {{ actions["bgp-actions"]["config"]["set-next-hop"] }}
  {% endif %}
{% endif %}

{% if deep_get(actions, "bgp-actions", "config", "set-med") %}
  set metric {{ actions["bgp-actions"]["config"]["set-med"] }}
{% endif %}

{% if deep_get(actions, "bgp-actions", "set-as-path-prepend") %}
  {% set as_prepend_config = actions["bgp-actions"]["set-as-path-prepend"]["config"] %}
  set as-path prepend{{ (" " + as_prepend_config["asn"]|string) * as_prepend_config["repeat-n"] }}
{% endif %}

{% if deep_get(actions, "bgp-actions", "set-community") %}
  {# this one might need some python magic #}
  {# handle "set community none" and other well known communities #}
  {% if actions["bgp-actions"]["set-community"]["config"].get("method") == "INLINE" %}
  set community {{ actions["bgp-actions"]["set-community"]["inline"]["config"]["communities"]|join(" ") }}
  {% else %}
  {# NOT SUPPORTED: not implemented in CMDB #}
  {# It would need to join community_sets.community_set[0-n].config.community-member #}
  {% endif %}
{% endif %}
